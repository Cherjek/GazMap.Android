package ru.zch.gasstation.domain;

// Generated 09.04.2015 2:10:09 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import ru.zch.gasstation.services.ServicePoints;

/**
 * Changes generated by hbm2java
 */
@Entity
@Table(name = "changes", catalog = "gasstation")
public class Change implements java.io.Serializable {
	private static final long serialVersionUID = 4260118430769349433L;

	private Integer id;
	private Point point;
	private Device device;
	private Integer field;
	private Date created;
	private String valueNew;

	public Change() {
	}

	public Change(Date created) {
		this.created = created;
	}

	public Change(Point point, Device device, Integer field, String valueNew) {
		this(point, device, field, null, valueNew);
	}
	
	public Change(Point point, Device device, Integer field, Date created, String valueNew) {
		this.point = point;
		this.device = device;
		this.field = field;
		this.created = created;
		this.valueNew = valueNew;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pid")
	public Point getPoint() {
		return this.point;
	}

	public void setPoint(Point point) {
		this.point = point;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "did")
	public Device getDevice() {
		return this.device;
	}

	public void setDevice(Device device) {
		this.device = device;
	}

	@Column(name = "field")
	public Integer getField() {
		return this.field;
	}

	public void setField(Integer field) {
		this.field = field;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = true, length = 19, insertable = false)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "valueNew", length = 256)
	public String getValueNew() {
		return this.valueNew;
	}

	public void setValueNew(String valueNew) {
		this.valueNew = valueNew;
	}

	@Transient
	public Point apply(ServicePoints service){
		for(PointFields field : PointFields.values()){
			if(field.id == this.field){
				field.apply(point, this, service);
				break;
			}
		}
		
		return point;
	}
	
	@Transient
	public Point apply(Point point, ServicePoints service){
		for(PointFields field : PointFields.values()){
			if(field.id == this.field){
				field.apply(point, this, service);
				break;
			}
		}
		
		return point;
	}
}
